(define (localizar? ele arbol)
  (cond ((null? arbol)
         #f)
        ((= ele (raiz arbol))
         #t)
        ((< ele (raiz arbol))
         (localizar? ele (hijo-izq arbol)))
        ((> ele (raiz arbol))
         (localizar? ele (hijo-der arbol)))))

; Otro
; Raiz e hijos
(define (raiz arbol)
  (cond ((atom? arbol)
         arbol)
        (else
         (car arbol))))

(define (hijo-izq arbol)
  (cond ((atom? arbol)
         '())
        (else
         (cadr arbol))))

(define (hijo-der arbol)
  (cond ((atom? arbol)
         '())
        (else
         (caddr arbol))))

; Atomo?
(define (atom? ele)
  (not (list? ele)))
(define (arbol centro izq der)
  (cond ((and (null? izq) (null? der))
         centro)
        (else
         (list centro izq der))))

; Raiz e hijos
(define (raiz arbol)
  (cond ((atom? arbol)
         arbol)
        (else
         (car arbol))))

(define (hijo-izq arbol)
  (cond ((atom? arbol)
         '())
        (else
         (cadr arbol))))

(define (hijo-der arbol)
  (cond ((atom? arbol)
         '())
        (else
         (caddr arbol))))

; Atomo?
(define (atom? ele)
  (not (list? ele)))

; Hoja?
(define (hoja? ele)
  (cond ((null? ele)
         #f)
        ((atom? ele)
         #t)
        ((null? (cdr ele))
         #t)
        (else
         #f)))

; Ordenar notacion (Prefija -> Infija)
(define (en-orden arbol)
  (cond ((null? arbol)
         '())
        ((atom? arbol)
         arbol)
        (else
         (cons (en-orden (hijo-izq arbol))
               (cons (raiz arbol)
                     (cons (en-orden (hijo-der arbol))
                           '()))))))